


<html>
  <head>
    <title>Place Autocomplete Address Form</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">

    <link rel="stylesheet" type="text/css" href="../../assets/stylesheets/directionsstyles.css">


  <%= stylesheet_link_tag "directionsstyles" %>


    
  </head>

  <body>


    <div class='container'>
      
      
        <div id='StartEndForm'></div>


          <form role='form' class="form-horizontal" method='post' action = '/directions'>
            <input type = 'hidden' name = 'authenticity_token' value = '<%= form_authenticity_token %>' />
            <div class='form-group'>
              <label class="control-label col-sm-4" for="email"><span class='green'>Start</span></label>
              <div class="col-sm-4">
                <input class="form-control" id="autocomplete" placeholder="Starting Address" onFocus='geolocate()' name = 'start_address'>
              </div>
            </div>

            <div class='form-group'>
              <label class="control-label col-sm-4" for="end"><span class='Red'>End</span></label>
              <div class="col-sm-4">
                <input class="form-control" id="test" placeholder="Ending Address" onFocus='geolocate()' name = 'end_address'>
              </div>
            </div>

            <div class='form-group'>
              <div class="col-sm-offset-5 col-sm-2">
                <button type="submit" class="btn btn-success btn-block" >GO!</button>
              </div>
            </div>
          </form>
    </div> <!-- ends  StartEndForm-->
  </div> <!-- ends container -->






<script>
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

// This example requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:


var placeSearch, autocomplete;
var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),

      {types: ['geocode']});
    autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('test')),

      {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

// [START region_fillform]
function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
// [END region_geolocation]

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFKDN5CZiPsOBMy4p-TmiuLdI4lX1VWG0&signed_in=true&libraries=places&callback=initAutocomplete"
        async defer></script>
  </body>
</html>